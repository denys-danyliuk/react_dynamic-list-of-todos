{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","setSelectedTodo","selectedTodoId","setSelectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","searchQuery","setSearchQuery","completedFilter","setCompletedFilter","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","selectedTodo","filteredTodos","useMemo","filter","queryFilter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6dcb546.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodoId: number,\n  setSelectedTodoId: (n: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    todos,\n    setSelectedTodo,\n    selectedTodoId,\n    setSelectedTodoId,\n  }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                  setSelectedTodoId(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  {selectedTodoId !== todo.id\n                    ? <i className=\"far fa-eye\" />\n                    : <i className=\"far fa-eye-slash\" />}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import { FC } from 'react';\n\ninterface Props {\n  searchQuery: string,\n  setSearchQuery: (s: string) => void,\n  completedFilter: string,\n  setCompletedFilter: (v: string) => void,\n}\n\nexport const TodoFilter: FC<Props> = ({\n  searchQuery,\n  setSearchQuery,\n  completedFilter,\n  setCompletedFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={completedFilter}\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            setCompletedFilter(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => {\n          setSearchQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n  setSelectedTodoId: (n: number) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n                setSelectedTodoId(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [completedFilter, setCompletedFilter] = useState('all');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filteredTodos = useMemo(() => (\n    todos.filter(todo => {\n      const queryFilter = todo.title.toLowerCase().includes(searchQuery.toLowerCase());\n\n      switch (completedFilter) {\n        case 'active':\n          return queryFilter && todo.completed === false;\n\n        case 'completed':\n          return queryFilter && todo.completed === true;\n\n        default:\n          return queryFilter;\n      }\n    })), [todos, searchQuery, completedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter searchQuery={searchQuery} setSearchQuery={setSearchQuery} completedFilter={completedFilter} setCompletedFilter={setCompletedFilter} />\n            </div>\n\n            <div className=\"block\">\n              {filteredTodos.length === 0\n                ? <Loader />\n                : <TodoList todos={filteredTodos} selectedTodoId={selectedTodoId} setSelectedTodo={setSelectedTodo} setSelectedTodoId={setSelectedTodoId} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} setSelectedTodo={setSelectedTodo} setSelectedTodoId={setSelectedTodoId} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}